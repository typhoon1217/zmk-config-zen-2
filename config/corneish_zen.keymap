/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>


#define DEFAULT 0
#define NAV     1
#define MOUSE   2
#define MEDIA   3
#define NUM     4
#define SYM     5
#define FUN     6
#define ADJUST  7

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q       &kp W       &kp E       &kp R       &kp T       &kp TAB         &kp BSPC    &kp Y       &kp U       &kp I       &kp O       &kp P
                &hm LGUI A  &hm LALT S  &hm LCTRL D &hm LSHFT F &kp G       &kp ESC         &kp SQT     &kp H       &hm RSHFT J &hm RCTRL K &hm RALT L  &hm RGUI QUOT
                &kp Z       &kp X       &kp C       &kp V       &kp B       &mo ADJUST      &kp RSHFT   &kp N       &kp M       &kp COMMA   &kp DOT     &kp SLASH
                                        &lt NAV ESC &lt MOUSE SPACE &lt MEDIA TAB           &lt SYM RET &lt NUM BSPC &lt FUN DEL
            >;
        };

        nav_layer {
            bindings = <
                &kp PG_UP   &kp HOME    &kp UP      &kp END     &kp INS     &trans          &trans      &none       &kp N7      &kp N8      &kp N9      &kp N0
                &kp PG_DN   &kp LEFT    &kp DOWN    &kp RIGHT   &kp DEL     &trans          &trans      &none       &kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI
                &kp LC(Z)   &kp LC(X)   &kp LC(C)   &kp LC(V)   &kp LC(Y)   &trans          &trans      &none       &none       &none       &none       &none
                                        &trans      &trans      &trans                      &trans      &trans      &trans
            >;
        };

        mouse_layer {
            bindings = <
                &none       &none       &kp UP      &none       &none       &trans          &trans      &none       &none       &none       &none       &none
                &none       &kp LEFT    &kp DOWN    &kp RIGHT   &none       &trans          &trans      &none       &kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI
                &none       &none       &none       &none       &none       &trans          &trans      &none       &none       &none       &none       &none
                                        &kp K_APP   &kp SPACE   &kp TAB                     &trans      &trans      &trans
            >;
        };

        media_layer {
            bindings = <
                &none       &none       &none       &none       &none       &trans          &trans      &none       &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp C_VOL_UP
                &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &none       &trans          &trans      &none       &kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI
                &none       &none       &none       &none       &none       &trans          &trans      &none       &kp C_MUTE  &none       &none       &kp C_VOL_DN
                                        &trans      &trans      &trans                      &trans      &trans      &trans
            >;
        };

        num_layer {
            bindings = <
                &kp LBKT    &kp N7      &kp N8      &kp N9      &kp RBKT    &trans          &trans      &none       &none       &none       &none       &none
                &kp SEMI    &kp N4      &kp N5      &kp N6      &kp EQUAL   &trans          &trans      &none       &kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI
                &kp GRAVE   &kp N1      &kp N2      &kp N3      &kp BSLH    &trans          &trans      &none       &none       &none       &none       &none
                                        &kp DOT     &kp N0      &kp MINUS                   &trans      &trans      &trans
            >;
        };

        sym_layer {
            bindings = <
                &kp LBRC    &kp AMPS    &kp ASTRK   &kp LPAR    &kp RBRC    &trans          &trans      &none       &none       &none       &none       &none
                &kp COLON   &kp DLLR    &kp PRCNT   &kp CARET   &kp PLUS    &trans          &trans      &none       &kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI
                &kp TILDE   &kp EXCL    &kp AT      &kp HASH    &kp PIPE    &trans          &trans      &none       &none       &none       &none       &none
                                        &kp LPAR    &kp RPAR    &kp UNDER                   &trans      &trans      &trans
            >;
        };

        fun_layer {
            bindings = <
                &kp F12     &kp F7      &kp F8      &kp F9      &kp PSCRN   &trans          &trans      &none       &none       &none       &none       &none
                &kp F11     &kp F4      &kp F5      &kp F6      &kp SLCK    &trans          &trans      &none       &kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI
                &kp F10     &kp F1      &kp F2      &kp F3      &kp PAUSE_BREAK &trans      &trans      &none       &none       &none       &none       &none
                                        &kp K_APP   &kp SPACE   &kp TAB                     &trans      &trans      &trans
            >;
        };

        adjust_layer {
            bindings = <
                &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans    &trans      &rgb_ug RGB_TOG &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI
                &bt BT_CLR   &out OUT_USB &out OUT_BLE &none       &ext_power EP_TOG &trans &trans    &rgb_ug RGB_SPI &rgb_ug RGB_SPD &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD
                &bt BT_NXT   &bt BT_PRV   &out OUT_TOG &none       &ext_power EP_ON &trans  &trans    &ext_power EP_OFF &none       &none           &none           &none
                                          &trans       &trans       &trans                  &trans      &trans          &trans
            >;
        };
    };
};
